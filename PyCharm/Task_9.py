#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Разработайте программу по следующему описанию.
В некой игре-стратегии есть солдаты и герои. У всех есть свойство, содержащее уникальный
номер объекта, и свойство, в котором хранится принадлежность команде. У солдат есть
метод "иду за героем", который в качестве аргумента принимает объект типа "герой". У
героев есть метод увеличения собственного уровня.
В основной ветке программы создается по одному герою для каждой команды. В цикле
генерируются объекты-солдаты. Их принадлежность команде определяется случайно.
Солдаты разных команд добавляются в разные списки.
Измеряется длина списков солдат противоборствующих команд и выводится на экран. У
героя, принадлежащего команде с более длинным списком, увеличивается уровень.
Отправьте одного из солдат первого героя следовать за ним. Выведите на экран
идентификационные номера этих двух юнитов.
"""

import random


class Soldier:
    def __init__(self, number, team):
        self.number = number
        self.team = team

    def follow_hero(self, hero):
        print(f"Солдат {self.number} следует за героем {hero.number}.")


class Hero:
    def __init__(self, number):
        self.number = number
        self.level = 1

    def increase_level(self):
        self.level += 1


if __name__ == '__main__':
    # Создаем героев для каждой команды
    team1_hero = Hero(1)
    team2_hero = Hero(2)

    # Создаем списки солдат для каждой команды
    team1_soldiers = []
    team2_soldiers = []

    # Генерируем случайных солдат и определяем их принадлежность команде
    for i in range(10):
        number = i + 1
        team = random.choice([team1_soldiers, team2_soldiers])
        soldier = Soldier(number, team)
        team.append(soldier)

    # Выводим длину списков солдат противоборствующих команд
    print("Длина списка солдат команды 1:", len(team1_soldiers))
    print("Длина списка солдат команды 2:", len(team2_soldiers))

    # Увеличиваем уровень героя команды с более длинным списком солдат
    if len(team1_soldiers) > len(team2_soldiers):
        team1_hero.increase_level()
        print("Уровень героя команды 1 увеличен.")
    else:
        team2_hero.increase_level()
        print("Уровень героя команды 2 увеличен.")

    # Отправляем первого солдата первого героя следовать за ним
    team1_soldiers[0].follow_hero(team1_hero)

    # Выводим идентификационные номера героя и солдата
    print("Идентификационный номер героя:", team1_hero.number)
    print("Идентификационный номер солдата:", team1_soldiers[0].number)